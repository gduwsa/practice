#include<stdio.h>
int get_max(int x, int y)
{
	if (x > y)
		return x;
	else
		return y;
}
int main()
{
	int a = 10;
	int b = 20;
	int max = get_max(a, b);
	printf("max = %d\n", max);
	return 0;
}

#include<stdio.h>

int main（）

{
整型 ch = 0;
整型 ret = 0;
字符密码[20] = { 0 };
printf（“输入密码：>”）;
scanf（“%s”， password）;
printf（“请确认（Y/N）：>”）;
while（（ch = getchar（））！='\n'）//要让它循环接收读取
	{
;//空行
	}
ret = getchar（）;
if （ret == 'Y'）
	{
printf（“确认成功\n”);
	}
还
	{
printf（“放弃确认\n”);
	}
返回 0;
}

求奇数
#include<stdio.h>//方法一

int main（）
{
整型 i = 1;
而 （i <= 100）
	{
printf（“%d”， i）;
i+=2;
	}
返回 0;
}

#include<stdio.h>//方法二

int main（）
{
整型 i = 1;
而 （i<=100）
	{
如果 （i%2！=0）
printf（“%d”， i）;
i++;
	}
返回 0;

whlie循环语句
#include<stdio.h>
int main（）
{
整型 i = 1;
而 （i <= 10）
	{
如果 （i == 5）
中断;//继续
printf（“%d\n”， i）;
i++;
	}
返回 0;
}

开关循环语句
#include<stdio.h>

int main（）
{
整型 n = 1;
整型 m = 2;
开关 （n）
	{
案例1：
m++;
案例2：
n++;
案例3：
开关 （n）
		{
案例1：
n++;
案例2：
m++;
n++;
休息;
		}
案例4：
m++;
休息;
违约：
休息;
	}
printf（“m = %d，n = %d\n”， m， n）;
返回 0;
}

#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<字符串>
struct为结构体，描述复杂对象，创建一本书
结构书
{
字符名称[20];//C语言
短价;//55
};//此分号不可缺少，结束类型定义

int main（）
{
struct Book b1 = { “C语言”，55};
结构书* pd = &b1;
printf（“%s\n”， pd->name）;
printf（“ % d\n”， pd->price）;
b1.价格 = 20;
strcpy（b1.name， “C++”）;
printf（“%s\n”， pd->name）;
printf（“ % d\n”， pd->price）;
返回 0;
}

#include<stdio.h>
//计算1!+2!+3!+...+10!
int main()
{
	int i = 0;
	int n = 0;
	int ret = 1;
	int sum = 0;
	for (n = 1; n <= 10; n++)
	{
		ret = ret * n;
		//n的阶乘
		sum = sum + ret;
	}
	printf("ret = %d\n", sum);
	return 0;
}


#include<stdio.h>
//计算n的阶乘
int main()
{
	int i = 0;
	int n = 0;
	int ret = 1;
	scanf("%d", &n);
	for (i = 1; i <= n; i++)
	{
		ret = ret * i;
	}
	printf("ret = %d\n", ret);
	return 0;
}

#include<stdio.h>//在一个有序数组中查找具体的某个数字n

int main()
{
	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
	int k = 7;
	int sz = sizeof(arr) / sizeof(arr[0]);//计算元素个数
	int left = 0;//左下标
	int right = sz - 1;//右下标

	while (left <= right)
	{
	int mid = (left + right) / 2;
			if (arr[mid] > k)
			{
				right = mid - 1;
			}
			else if(arr[mid] < k)
			{
				left = mid + 1;
			}
			else
			{
				printf("找到了，下标是:%d\n", mid);
				break;
			}
	}
	if (left > right)
	{
		printf("找不到\n");
	}
	return 0;
}


#include<stdio.h>//两侧向中间汇聚
#include<string.h>
#include<windows.h>
#include<stdlib.h>

int main()
{
	char arr1[] = "welcome !!!";
	char arr2[] = "###########";
	int left = 0;
	int right = strlen(arr1) - 1;
	while (left <= right)
	{
		arr2[left] = arr1[left];
		arr2[right] = arr1[right];
		printf(" % s\n", arr2);
		Sleep(1000);
		system("cls");
		left++;
		right--;
	}
	return 0;
}

#include<stdio.h>//模拟登录，最多三次
int main()
{
	int i = 0;
	char password[20] = { 0 };
	for (i = 0; i < 3; i++)
	{
		printf("请输入密码:>");
		scanf("%s", password);
		if (strcmp(password, "123456") == 0)
		{
			printf("登陆成功\n");
			break;
		}
		else
		{
			printf("密码错误\n");
		}		
	}
	if (i == 3)
		printf("三次密码错误，退出程序\n");
	return 0;
}

#include<stdio.h>//求闰年
int main()
{
	int i = 0;
	int count = 0;
	for (i = 1000; i <= 2000; i++)
	{
		if (i % 4 == 0 && i % 00 != 0)
		{
			printf("%d ", i);
			count++;
		}
		else if (i % 400 == 0)
		{
			printf("%d", i);
			count++;
		}
	}
	printf("\ncount = % d\n", count);
	return 0;
}

#include<stdio.h>//最大公约数
int main()
{
	int m = 24;
	int n = 18;
	int r = 0;
	scanf("%d%d", &m, &n);
	while(r=m%n)
	{
		m = n;
		n = r;
	}
	printf("%d\n", n);
	return 0;
}

#include<stdio.h>//1-1/2+1/3+...+1/99-1/100
int main()
{
	int i = 0;
	double sum = 0;
	int flag = 1;
	for (i = 1; i <= 100; i++)
	{
		sum += flag*1.0 / i;
		flag= -flag;
	}
	printf("%f\n", sum);
	return 0;
}

#include<stdio.h>//找9
int main()
{
	int i = 0;
	int count = 0;
	for (i = 0; i <= 100; i++)
	{
		if (i % 10 == 9)
		{
			printf("% d", i);
			count++;
		}
		if (i / 10 == 9) 
		{
			printf("% d", i);
			count++;
		}	
	}
	printf("\ncount = %d", count);
	return 0;
}

#include<stdio.h>//求素数，试除法
#include<math.h>
int main()
{
	int i = 0;
	int count = 0;
	//for (i = 101; i <= 200; i+=2)//直接刨去偶数
	for (i = 100; i <= 200; i++)
	{
		int j = 0;
		for (j = 2; j < sqrt(i); j++)//sqrt开平方的库函数
		{
			if (i % j == 0)
			{
				break;
			}
		}
		if (j >sqrt(i))
			count++;
		printf("% d", i);
	}
	printf("\ncount = %d", count);
	return 0;
}

#include<stdio.h>//九九乘法表
int main()
{
	int i = 0;
	for (i = 1; i <= 9; i++)
	{
		int j = 1;
		for (j = 1; j <= i; j++)
		{
			printf("% d*%d=%-2d", i, j, i * j);
		}
		printf("\n");
	}
	return 0;
}

#include<stdio.h>//求最大值
int main()
{
	int arr[] = { -1,-2,-4,-5,-7,-10 };
	int max = arr[0];
	int i = 0;
	int sz = sizeof(arr) / sizeof(arr[0]);
	for (i = 1; i < sz; i++)
	{
		if (arr[i] > max);
	}
	printf("max = %d\n", max);
	return 0;
}
